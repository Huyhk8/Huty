class EnEn_LongmanDictionary {
    constructor() {
        this.baseURL = 'https://www.ldoceonline.com/';
    }

    findTerm(word) {
        return new Promise((resolve, reject) => {
            const queryURL = `${this.baseURL}search/?q=${encodeURIComponent(word)}`;
            
            fetch(queryURL)
                .then(response => response.text())
                .then(html => {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, "text/html");
                    const definitionElements = doc.querySelectorAll('.dictionary .entry'); // Adjust this selector based on the actual page content
                    
                    let definitions = [];
                    definitionElements.forEach((elem) => {
                        // Extract the necessary information for each definition
                        // This might include the word type, definition, examples, etc.
                        // The exact details will depend on the structure of the Longman Dictionary's search results page
                        
                        const wordType = elem.querySelector('.POS')?.innerText; // Example selector, adjust as necessary
                        const definitionText = elem.querySelector('.DEF')?.innerText; // Example selector, adjust as necessary
                        
                        if (definitionText) {
                            definitions.push(`${wordType ? wordType + ': ' : ''}${definitionText}`);
                        }
                    });
                    
                    if (definitions.length > 0) {
                        resolve(definitions.join('\n'));
                    } else {
                        reject('No definitions found');
                    }
                })
                .catch(error => {
                    reject(error.message);
                });
        });
    }
}

// Example usage:
const dictionary = new EnEn_LongmanDictionary();
dictionary.findTerm('test').then(content => {
    console.log(content);
}).catch(error => {
    console.error(error);
});
